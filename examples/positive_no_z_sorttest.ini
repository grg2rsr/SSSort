[path]
; the name of folder in which all results will be stored
experiment_name = /home/agarpe/Workspace/SSSort/Remerge/data/test-nz
; path to the data
data_path = /home/agarpe/Workspace/SSSort/Remerge/data/sorttest.dill 

[preprocessing]
; recording will be high-pass filtered by this value in [Hz]
highpass_freq = 100
; recording will be z-scored if True
z_score = False

[spike detect]
; run only initial spike detection to calibrate spike detection parameters
spike_detect_only = False
; find positive or negative values in voltage trace
peak_mode = positive
; minimum spike amplitude in median absolute deviations
amplitude = 0.25
; minimum peak prominence of spike
min_prominence = 0.3 
; window around spike in ms
wsize = 4

[spike sort]
; initial number of clusters
init_clusters = 6
; final number of clusters
n_clust_final = 3
; no more reassigned spikes than this fraction for convergence
conv_crit = 0.005
; number of past iterations to consider when computing convergence
history_len = 6
; abort algorithm if no convergence is reached after this number of iterations
iterations = 48
; confirm merges manually?
manual_merge = True
; force merges until n_clust_final is reached
force_merge = True
; initial alpha for clustering. If force_merge=True, this value does not matter much
clust_alpha = 0.5

; added penalty to the score of a spike when scored with templates from
; another cluster. This makes it harder for spikes to be reassigned
; decrease this value if you think you have more than one unit within one
; cluster
reassign_penalty = 0.15
; added penalty to the score of a spike if in the smallest cluster.
; Assumes that cluster with the smallest amplitude is noise and not spikes.
; set to 0 if all clusters definitely represent units
noise_penalty = 4.0
; fraction of spikes that are randomly unassigned at each iteration
; increase this value if you find the algorithm getting stuck in a local
; minima and terminating prematurely
f_noise = 0.05

[spike model]
; number of features
; increase this number if your spikes are very similar in temporal shape
n_model_comp = 5
; parameter for outlier detection
; incease this number if you your models predictions don't look like "healthy" spikes
template_reject = 40

[output]
; output file format
output_format = .dill
; write spike times as .csv?
csv = False
; zoom in ms for high magnification spike train inspect
zoom = 2200, 3000
; figure format and resolution
fig_format = .png
fig_dpi = 166


; interval at which to indicate spike numbers in overview plots? (say 0 for no labels)
spike_label_interval = 5
; Width of the final plots showing fitted spikes, in seconds
max_window_fitted_spikes_overview = 0.6

[kernels]
; the time constant of the fast kernel, used for the firing rate estimation
; change this value carefully if you think the models do not capture the 
; temporal dependence of firing rate on spike shape (e.g. how quickly
; it recovers)
sigma_fast = 0.05
; the time constant of the slow kernel, used for across-unit firing rate prediction.
; change this value if you think the same unit with high and low firing
; rates is split into different clusters
sigma_slow = 0.10

[postprocessing]
segment_number = 0

; post_run_manual_merger max number of iterations
max_it = 200

; spike model type, i.e how to model spike shape as a function of firing rate. Options are "scaled_average" or "individual"
spike_model_type = scaled_average

; size of spike templates as left, right, where left = ms left of spike top and right = ms right of spike top; default 2, 2
template_window = 2,2

; spike window width, i.e. size of window in which to match templates in ms
spike_window_width= 12

;vertical align mode
vertical_align_mode= mean

;spike position tolerance, i.e. how far from the originally determined spike time a matching template spike can be located, in ms
spike_position_tolerance= 1.0

; maximum spike time difference in a compound spike, i.e. the maximal spike time difference between two spikes before they are treated as individual spikes, in ms
max_compound_spike_diff= 2.5

; maximum Euclidean distance of template to data for accepting a spike decision without user confirmation, quick 0.025, careful 0.01, every spike 0.0025
max_dist_for_auto_accept= 0.015

; minimal difference of Euclidean distances of two alternative matches where we auto accept the better match without user input, in %, quick 5, careful 10, every spike 15
min_diff_for_auto_accept= 10

; minimal Euclidean distance for rejecting either match and deleting a putative spike, quick 0.02, careful 0.035, every spike 0.05
min_dist_for_auto_reject= 0.05

; plot data and detected spikes during post-processing
plot_fitted_spikes= True